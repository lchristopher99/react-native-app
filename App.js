import React from 'react';
import { StyleSheet, Text, View } from 'react-native';
// Following imports are dependent files for project
// Each one adds elements/constants/components/data etc...
import FetchLocationBtn from './components/FetchLocation'
import UsersMap from './components/UsersMap';

// fetchLocation is the default exported class for this file
export default class App extends React.Component {
  // Initial state is set to null so as to assign data to it later via. userLocation coords generated by 
  // navigator.geolocation.getCurrentPosition.
  state = {
    userLocation: null
  }
  // Following functional component is a handler passed to prop: this.getUserLocationHandler
  // Function is made to grab the simulated user position,
  // (simulated due to coords being passed to ios simulator itself rather than relying on actual gps)
  // using navigator.geolocation.getCurrentPosition => this data is then passed to a name: position
  getUserLocationHandler = () => {
    navigator.geolocation.getCurrentPosition(position => {
      // For debugging...logs coords on remote console
      // console.log(position),

      // following setState assigns changing data (ie. position.coords.latitude, position.coords.longitude) to a prop/name 
      // (ie. latitude, longitude) which is then contained within a parent object: userLocation.
      this.setState({
        userLocation: {
          // following are obtained from a coords object generated by navigator.geolocation.getCurrentPosition.
          // Coords object can be seen if console.log is uncommented.
          latitude: position.coords.latitude,
          longitude: position.coords.longitude,
          // deltas are created to create a 'region' for the user to view around the x, y coords above.
          latitudeDelta: 0.0622,
          longitudeDelta: 0.0421
        }
      });
    }), err => console.log(err); // console error is created so as to notify if network type error is present
  }

  // The following return statement is what is returned by the default class for the page: App.
  render() {
    return (
      <View style={styles.container}>
        {/* Below is a props functional component located in fetchLocation.js that returns a react-native-elements button which has been 
        renamed by the function as FetchLocationBtn */}
        <FetchLocationBtn
          // following prop: onGetLocation is declared by button element in FetchLocation.js
          // below prop is passed handler: this.getUserLocationHandler - located above
          onGetLocation={this.getUserLocationHandler} />
        {/* Below is a props functional component located in UsersMap.js that returns a react-native-maps MapView element which has been 
        renamed by the function as UsersMap */}
        <UsersMap userLocation={this.state.userLocation} />
      </View>
    );
  }
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#fff',
    alignItems: 'center',
    justifyContent: 'center',
  },
});
